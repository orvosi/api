// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/medical_record_finder.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/orvosi/api/entity"
)

// MockFindMedicalRecord is a mock of FindMedicalRecord interface
type MockFindMedicalRecord struct {
	ctrl     *gomock.Controller
	recorder *MockFindMedicalRecordMockRecorder
}

// MockFindMedicalRecordMockRecorder is the mock recorder for MockFindMedicalRecord
type MockFindMedicalRecordMockRecorder struct {
	mock *MockFindMedicalRecord
}

// NewMockFindMedicalRecord creates a new mock instance
func NewMockFindMedicalRecord(ctrl *gomock.Controller) *MockFindMedicalRecord {
	mock := &MockFindMedicalRecord{ctrl: ctrl}
	mock.recorder = &MockFindMedicalRecordMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFindMedicalRecord) EXPECT() *MockFindMedicalRecordMockRecorder {
	return m.recorder
}

// FindByID mocks base method
func (m *MockFindMedicalRecord) FindByID(ctx context.Context, id uint64, email string) (*entity.MedicalRecord, *entity.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", ctx, id, email)
	ret0, _ := ret[0].(*entity.MedicalRecord)
	ret1, _ := ret[1].(*entity.Error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID
func (mr *MockFindMedicalRecordMockRecorder) FindByID(ctx, id, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockFindMedicalRecord)(nil).FindByID), ctx, id, email)
}

// FindByEmail mocks base method
func (m *MockFindMedicalRecord) FindByEmail(ctx context.Context, email string, from uint64) ([]*entity.MedicalRecord, *entity.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByEmail", ctx, email, from)
	ret0, _ := ret[0].([]*entity.MedicalRecord)
	ret1, _ := ret[1].(*entity.Error)
	return ret0, ret1
}

// FindByEmail indicates an expected call of FindByEmail
func (mr *MockFindMedicalRecordMockRecorder) FindByEmail(ctx, email, from interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByEmail", reflect.TypeOf((*MockFindMedicalRecord)(nil).FindByEmail), ctx, email, from)
}
